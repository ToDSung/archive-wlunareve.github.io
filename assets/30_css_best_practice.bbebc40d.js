import{o as e,b as s,q as t}from"./vendor.07cacaba.js";const n={class:"markdown-body"},o=t('<h1>30 css best practice</h1><p>有能力看懂英文的人，建議左轉文章 <br><a href="https://code.tutsplus.com/tutorials/30-css-best-practices-for-beginners--net-6741">https://code.tutsplus.com/tutorials/30-css-best-practices-for-beginners--net-6741</a></p><h3>1. Organize the Stylesheet With a Top-Down Structure</h3><p>建議可以根據 source code 去排序 css 的撰寫順序，<br> 補充: 有文章建議以 class 做為選擇器無論是效能還是 套用的 order 都會比較好辨識</p><pre><code>.header {\n\n}\n.nav-menu {\n\n}\n.main-content{\n\n}\n</code></pre><h3>2. utility base or components base css</h3><p>Tailwind css 的模式是 utility base 的 css 改動可以更簡單</p><p>目前我使用的 bem 命名方式是 components base 的 css 缺點是會寫重複的 css 相應的打包時也會有更大的大小</p><h3>3. Use the Right Doctype</h3><p><img src="https://i.imgur.com/dKqXBK7.png" alt=""> 使用 html5 時添加這個，向瀏覽器宣告這份文件是 html5</p><h3>4. Understand the Difference Between Block and Inline Elements</h3><p>常見的 inline 跟 block 元素如下，基本規則是不要換成另外一個<br></p><p>inline 元素</p><pre><code>span, a, strong, em, img, br, input, abbr, acronym\n</code></pre><p>block 元素</p><pre><code>div, h1...h6, p, ul, li, table, blockquote, pre, form\n</code></pre><h3>5. Use Absolute Positioning Sparingly</h3><p>謹慎使用絕對定位，太多的絕對定位會使得網頁布局太亂<br> 補充: 太多的 z-index，也會讓你在維護上難以調整</p><h3>6. Avoid Extra Selectors</h3><p>使用過多的 selector，除了 code 的複雜度更高，瀏覽器搜尋的效率也會更差</p>',20),r={setup:(t,{expose:r})=>(r({frontmatter:{}}),(t,r)=>(e(),s("div",n,[o])))};export default r;
